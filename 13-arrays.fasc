(#Y(si::bytecodes nil nil (1 0 16 1 29) #1=#A(t (47) ("LPD3-UTILS" si::select-package lpd3-utils::with-matrix ext::location (defmacro lpd3-utils::with-matrix) (#2=#P"/data/data/org.eql5.android.repl/files/quicklisp/local-projects/lpd3-utils/13-arrays.lisp" . 52) ext::annotate :lambda-list (lpd3-utils::pats lpd3-utils::ar &body lpd3-utils::body) #:g557 #:g556 #:g558 si::dm-too-few-arguments lpd3-utils::pats lpd3-utils::ar lpd3-utils::body gensym lpd3-utils::gar let lpd3-utils::row lpd3-utils::pat #:g572 + lpd3-utils::col lpd3-utils::p aref #:g574 #Y(nil nil nil (24 45 24 26 13 0 15 25 13 3 13 2 8 1 45 26 14 23 13 0 19 2 22 52 23 43 1 6 4 6 2 73 29) #1# #2# 52) mapcar #Y(nil nil nil (24 45 20 26 8 1 45 21 13 2 13 0 19 2 22 51 2 43 1 8 -1 52 23 34 27 12 13 0 19 2 28 29) #1# #2# 52) mapcan #Y(lpd3-utils::with-matrix nil nil (24 45 9 24 45 10 26 10 1 5 45 11 10 0 76 39 6 13 2 19 1 12 10 0 4 12 10 0 5 51 0 22 45 13 10 1 76 39 6 13 3 19 1 12 10 1 4 12 10 1 5 51 1 22 45 14 10 2 45 15 19 0 16 45 17 15 18 13 0 10 2 6 2 6 1 12 15 18 8 -1 45 19 34 29 12 13 4 19 2 30 12 43 1 10 1 7 3 6 3 73 43 1 29) #1# #2# 52) t si::fset function "Similar to destructuring-bind, but 
  for two-dimensiinal arrays. The 
  destructuring pattern is nested lists." si::set-documentation lpd3-utils::with-array (defmacro lpd3-utils::with-array) (#2# . 742) (lpd3-utils::pat lpd3-utils::ar &body lpd3-utils::body) #:g576 #:g575 #:g577 #Y(nil nil nil (24 45 24 26 10 0 4 12 15 25 13 1 10 0 5 7 3 6 2 73 29) #1# #2# 742) #Y(lpd3-utils::with-array nil nil (24 45 41 24 45 42 26 10 1 5 45 43 10 0 76 39 6 13 2 19 1 12 10 0 4 12 10 0 5 51 0 22 45 20 10 1 76 39 6 13 3 19 1 12 10 1 4 12 10 1 5 51 1 22 45 14 10 2 45 15 19 0 16 45 17 15 18 13 0 10 2 6 2 6 1 12 15 18 34 44 12 13 3 19 2 28 12 10 1 7 3 6 3 73 43 1 29) #1# #2# 742) "Destructuring for arrays of arbitrary
  rank. The destructuring pattern consists
  of a nested list, where each inner list
  begins with a symbol--the var, and then
  the indices of the item to which the 
  symbol will be bound.")) #2# 0) #Y(si::bytecodes nil nil (15 2 15 3 15 4 15 5 19 4 6 15 2 14 7 77 15 8 19 4 6 15 2 34 31 12 14 32 9 3 19 4 33 15 2 15 34 15 35 19 3 36 1 2 73 29) #1# #2# 52) #Y(si::bytecodes nil nil (15 37 15 3 15 38 15 39 19 4 6 15 37 14 7 77 15 40 19 4 6 15 37 34 45 12 14 32 9 3 19 4 33 15 37 15 34 15 46 19 3 36 1 37 73 29) #1# #2# 742))
